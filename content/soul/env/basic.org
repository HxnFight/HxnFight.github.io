#+title: 文档环境、代码环境
#+date:  2021-01-14T22:38:21+08:00
#+weight: 5

** hugo theme 选择

   - 一直再找一个比较合适的blog生成工具. 最早的时候是自己编写markdown，上传到csdn中.
     后来接触到vim emacs，使用emacs orgmode 自带的publish系统搭建了一套自己的wiki \\
     也整合上传到了github中，不过后续更少更新。所有的学习笔记、工作笔记也都是记录再本地中基本都是组内人再访问。 \\
     随后也尝试过jekyll，但是都不太理想。直到前段时间接触、学习了hugo。感觉还是比较符合自己的需求。 \\
     目前简单修改了一个主题来使用 [[https://themes.gohugo.io/hugo-theme-learn/][hugo-theme-learn]], 改的比较糙。也在慢慢的优化使用. \\
     还有就是这个排版，也好头疼。等我再搞搞的

** github pages 设置
   
   - 早期在github page中搭建blog是建立一个<USERNAME>.github.io项目。
     将编译后的静态内容作为内容提交。 
   - 这几天在查看hugo的发布时，发现在可以在github.io项目中，建立一个docs的文件夹，来存放
     生成的静态网站内容，这样方便和源码存放。
     
** soul 代码编译
   - 下载代码

    #+begin_src  shell
    git clone  https://github.com/dromara/soul.git
    #+end_src

   - 编译代码
     shardingshpere 中也是采用这样的命令。
     其中rat checkstyle 有空看看的，自己的项目中没有使用过.

    #+begin_src  shell
    mvn clean package install 
    -Dmaven.test.skip=true 
    -Dmaven.javadoc.skip=true
    -Drat.skip=true 
    -Dcheckstyle.skip=true
    #+end_src

   - deepin install docker 
     [[https://gist.github.com/madkoding/3f9b02c431de5d748dfde6957b8b85ff][tutor]]
     #+begin_src shell

    sudo apt-get remove -y docker docker-engine docker.io containerd runc

    sudo apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common

    curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
    sudo apt-key fingerprint 0EBFCD88

    # 主要是这句，官方文档中，执行类似的这句报错
    # https://docs.docker.com/engine/install/ubuntu/
    #sudo add-apt-repository \
    #   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
    #   $(lsb_release -cs) \
    #   stable"

    printf 'deb [arch=amd64] https://download.docker.com/linux/debian stretch stable\n'  | sudo tee /etc/apt/sources.list.d/docker-ce.list

    sudo apt-get update -y
    sudo apt-get install -y docker-ce

    sudo usermod -aG docker $(whoami)
     #+end_src

   - docker install mysql

    #+begin_src  shell

    docker run --rm -d --name local_mysql \
    -v /data/docker/mysql/:/var/lib/mysql \
    -p 3306:3306 -e MYSQL_ROOT_PASSWORD=xxxxxxx  mysql:5.7.32

    #+end_src

   - docker install zk

    #+begin_src shell
    docker run -d --rm   \
    -p 2181:2181 -p 2888:2888 -p 3888:3888 -p 8080:8080 \
    --name local-zk  \
    -v /tmp/log/zk:/logs/ \
    -e ZOO_LOG4J_PROP="INFO,ROLLINGFILE"  \
    zookeeper


    #+end_src

   - soul-admin 启动

     mysql 安装以后，修改soul-admin配置文件application-local.yml  中的db密码，就可以编译启动
     db 相关文件soul会自动创建
     
     [[../images/soul-db.png]]


** 环境待改善的地方
    
   - emacs
     emacs 中配置spacemacs, 家里下载spacemacs比较慢。    
     emacs 排版问题
   - vim
     vim 中 YouCompleteMe插件的编译安装
     vim本身配置的调试
   - deepin 开机中加入一些自启动项
   - hugo 安装的版本过低，渲染org文件失败，折腾半天，升级最近的版本后
     支持渲染org文件,这点疏忽了，公司环境安装的比较新。
   - rat checkstyle 查一些资料
