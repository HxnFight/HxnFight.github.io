[
{
	"uri": "http://blog.valjean.cn/soul/env/",
	"title": "环境搭建",
	"tags": [],
	"description": "",
	"content": " 开篇随笔   自己的学习随笔和感想. 自己还没有做过这样正式的学习记录。\n 希望在这一个月的学习过程中，不断提升自己的能力。\n 进行开发环境、blog环境的搭建。\n 搞得还是有点仓促，只记录一下一些大致过程。\n 本来也有个国内ec2的环境，但是最近访问报网站未审核，\n 今天刚提了审核，可能得过几天才会下来。随后会迁移到自己的ec2上.\n 刚从manjaro 换到deepin系统上。有些软件还未安装完毕，先将就的用着\n 等周末将环境好好的整理一下\n  "
},
{
	"uri": "http://blog.valjean.cn/soul/exercise/",
	"title": "模块实践",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://blog.valjean.cn/soul/exercise/http-divie/",
	"title": "divide 模块实践",
	"tags": [],
	"description": "",
	"content": " divide 模块  参考手册  在项目根目录下的doc\ndoc ├── user-http.md └── plugin-divide.md   通过这两个文档的介绍，针对http的调用，明白两件事。\n  会在自己的项目中引入soul依赖，并且配置相关的接口. 让soul代理自己的接口\n  会调用soul的接口, 会配置admin中divide插件\n    启动项目   启动没有什么特殊配置，idea下一键启动. 启动后注意下各个服务的端口号,soul默认的端口如下\n   server port comment     SoulAdminBootstrap 9095 管理后台   SoulBootstrapApplication 9195 网关   SoulTestHttpApplication 8188 测试项目     在用soul 代理http接口后，请求地址和端口需要换成网关的。\n接口的url也需要按照管理后台中的配置请求. 具体的请求，后面有样例.\n  测试请求    post 的请求方式   # 项目自身的请求 curl -s -H \u0026#34;Content-type: application/json\u0026#34; -d \u0026#39;@./param.json\u0026#39; -X POST localhost:8188//order/save | jq \u0026#39;.\u0026#39;n # soul 代理的请求 curl -s -H \u0026#34;Content-type: application/json\u0026#34; -d \u0026#39;@./param.json\u0026#39; -X POST localhost:9195/http/order/save | jq \u0026#39;.\u0026#39;n     get 的请求方式\n  # 项目自身的请求 curl -s localhost:8188/order/findById\\?id=1 | jq \u0026#39;.\u0026#39; # soul 代理的请求 curl -s localhost:9195/http/order/findById\\?id=1 | jq \u0026#39;.\u0026#39;     补充：jq是终端下特好使的json 处理工具 –\u0026gt; jq-manual\n   总结   项目中使用到了webflux相关内容，这块之前没有接触过，周末会补充一下。\n通过项目中自带的docs、example-http.对soul的架构有了进一步的理解。\n 自己简要理解如下： . 后续会补充自己的认知流程图\n 官网的架构图如下:     "
},
{
	"uri": "http://blog.valjean.cn/soul/env/basic/",
	"title": "文档环境、代码环境",
	"tags": [],
	"description": "",
	"content": " hugo theme 选择    一直再找一个比较合适的blog生成工具. 最早的时候是自己编写markdown，上传到csdn中.\n  后来接触到vim emacs，使用emacs orgmode 自带的publish系统搭建了一套自己的wiki， 也整合上传到了github中，不过后续更少更新。所有的学习笔记、工作笔记也都是记录再本地中基本都是组内人再访问。\n  随后也尝试过jekyll，但是都不太理想。直到前段时间接触、学习了hugo。感觉还是比较符合自己的需求。\n  目前简单修改了一个主题来使用 hugo-theme-learn, 改的比较糙。也在慢慢的优化使用. 还有就是这个排版，也好头疼。等我再搞搞的\n    github pages 设置    早期在github page中搭建blog是建立一个\u0026lt;USERNAME\u0026gt;.github.io项目。 将编译后的静态内容作为内容提交。   这几天在查看hugo的发布时，发现在可以在github.io项目中，建立一个docs的文件夹，来存放 生成的静态网站内容，这样方便和源码以前存放。\n    soul 代码编译    下载代码\ngit clone https://github.com/dromara/soul.git    编译代码 shardingshpere 中也是采用这样的命令。 其中rat checkstyle 有空看看的，自己的项目中没有使用过.\nmvn clean package install -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -Drat.skip=true -Dcheckstyle.skip=true    deepin install docker tutor\nsudo apt-get remove -y docker docker-engine docker.io containerd runc sudo apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add - sudo apt-key fingerprint 0EBFCD88 # 主要是这句，官方文档中，执行类似的这句报错 # https://docs.docker.com/engine/install/ubuntu/ #sudo add-apt-repository \\ # \u0026#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ # $(lsb_release -cs) \\ # stable\u0026#34; printf \u0026#39;deb [arch=amd64] https://download.docker.com/linux/debian stretch stable\\n\u0026#39; | sudo tee /etc/apt/sources.list.d/docker-ce.list sudo apt-get update -y sudo apt-get install -y docker-ce sudo usermod -aG docker $(whoami)    docker install mysql\ndocker run --rm -d --name local_mysql \\ -v /data/docker/mysql/:/var/lib/mysql \\ -p 3306:3306 -e MYSQL_ROOT_PASSWORD=xxxxxxx mysql:5.7.32    docker install zk\ndocker run -d --rm \\ -p 2181:2181 -p 2888:2888 -p 3888:3888 -p 8080:8080 \\ --name local-zk \\ -v /tmp/log/zk:/logs/ \\ -e ZOO_LOG4J_PROP=\u0026#34;INFO,ROLLINGFILE\u0026#34; \\ zookeeper    soul-admin 启动\n mysql 安装以后，修改soul-admin配置文件application-local.yml 中的db密码，就可以编译启动 db 相关文件soul会自动创建\n     环境待改善的地方    emacs emacs 中配置spacemacs, 家里下载spacemacs比较慢。 emacs 排版问题\n  vim vim 中 YouCompleteMe插件的编译安装 vim本身配置的调试\n  deepin 开机中加入一些自启动项\n  hugo 安装的版本过低，渲染org文件失败，折腾半天，升级最近的版本后 支持渲染org文件,这点疏忽了，公司环境安装的比较新。\n  rat checkstyle 查一些资料\n    "
},
{
	"uri": "http://blog.valjean.cn/",
	"title": "soul 学习笔记",
	"tags": [],
	"description": "",
	"content": " soul 学习笔记    官方文档\n    "
},
{
	"uri": "http://blog.valjean.cn/soul/",
	"title": "soul 学习笔记",
	"tags": [],
	"description": "",
	"content": " 开篇   "
},
{
	"uri": "http://blog.valjean.cn/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://blog.valjean.cn/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]